-- index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <script
    src="https://code.jquery.com/jquery-3.3.1.min.js"
    integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
    crossorigin="anonymous"></script>    
    <title>JWT-Example</title>
</head>
<body>
    <div>
        <button id="btnlogin">Get Token</button>
        <input type="text" id="token" style="display: block; width: 100%">
        <button id="btncontent">Get Content</button>
        <h2 id="result"></h2>
        <script src="main.js"></script>
    </div>
</body>
</html>

-- main.js

$(document).ready(function() {
    console.log('ready');    
});

$('#btnlogin').on('click', function() {
    $.ajax({
        url: '/login',
        method: 'POST',
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        data: JSON.stringify({ name: 'jan',password: 'foobar'}),
        success: function(data) {
            console.log(data);
            $('#token').val(data.token)
        },
        error: function(err) {
            console.log(err);
        }
    });
});

$('#btncontent').on('click', function() {
    $.ajax({
        url: '/content',
        method: 'GET',
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        headers: {
            'Authorization': 'Bearer ' + $('#token').val()
        },
        success: function(data) {
            console.log(data);
            $('#result').html(data.result)
        },
        error: function(err) {
            console.log(err);
        }
    });
});

-- server.js

const express = require('express');
const jwt = require('jsonwebtoken');
const passport = require('passport');
const passportJWT = require('passport-jwt');

var ExtractJwt = passportJWT.ExtractJwt;
var JwtStrategy = passportJWT.Strategy;
var jwtOptions = {};

jwtOptions.jwtFromRequest = ExtractJwt.fromAuthHeaderAsBearerToken();
jwtOptions.secretOrKey = 'MySecret';

var strategy = new JwtStrategy(jwtOptions, function(jwt_payload, next) {
  console.log('payload received', jwt_payload);
  // usually this would be a database call:  

  // Authorization Bearer 123

  if(jwt_payload.id === 'jan') {
    let user = { id: jwt_payload.id };
    next(null, user);
  }
  else {
    next(null, false);
  }
});

passport.use(strategy);

const app = express();

app.use(express.static(__dirname + '/public'));
app.use(passport.initialize());
app.use(express.json());

app.get('/', function(req, res) {
    return res.send({ jwtexample: '1.0' });
});

// login returns a token if verified successfully
app.post('/login', function(req, res) {
    if(!req.body.name && !req.body.password) {
        return res.send({ error: 'username and password required' });
    }

    if(req.body.name === 'jan' && req.body.password === 'foobar') {
        // from now on we'll identify the user by the id and the id is the only personalized value that goes into our token
        var payload = { id: 'jan' };
        var token = jwt.sign(payload, jwtOptions.secretOrKey);
        res.json({ error: 0, token: token });
    } 
    else {
        res.send({ error: "user not found" });
    }
});

// app.get('/:path*', passport.authenticate('jwt', { session: false }),
app.get('/content', passport.authenticate('jwt', { session: false }),
    function(req, res) {
        return res.send({ error: 0, result: 'sssshhh its a secret' });
    }
);

app.listen(3000, function() {
  console.log("Express running");
});

