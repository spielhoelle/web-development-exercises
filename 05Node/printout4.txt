--
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Product API Frontend</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>Product API Frontend</h2>
            <div class="navigation">
                <div><input type="text" class="searchbox" placeholder="searchterm ..." /><button id="btn-search">search...</button></div>
                <div>                <span class="navlink" id="navlink-startpage">Startpage</span> | 
                    <span class="navlink" id="navlink-product">Add Product</span></div>
            </div>
        </div>
        <div class="content">
        </div>

        <div class="addproduct">
            <div class="formelements">
                <input type="text" id="title" placeholder="Enter title...">
                <input type="text" id="price" placeholder="Enter price...">
                <select id="type">
                    <option value="book" selected>Book</option>
                    <option value="music">Music</option>
                    <option value="movie">Movie</option>
                </select>
                <textarea id="description" cols="30" rows="10" placeholder="Enter description..."></textarea>
                <input type="text" id="imageurl" placeholder="Enter image URL...">
                <button id="btn-addproduct">Add Product</button>           
            </div>
        </div>
    </div>
    <script src="jquery.js"></script>
    <script src="main.js"></script>
</body>
</html>

--

html, body {
    padding: 0;
    margin: 0;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

h2 {
    padding: 4px;
}

.header {
    padding-left: 5px;
    padding-right: 10px;
}

.navigation {
    display: flex;
    justify-content: space-between;
}

.content {
    display: flex;
    justify-content: flex-start;
    flex-wrap: wrap;
}

.product {
    margin: 5px;
    width: 200px;
    height: 160px;
    /* background: url('images/mega.jpg') no-repeat center; */
    background-size: contain;
    display: flex;
    flex-flow: column;
}

.product-title {
    flex: 1 1 auto;
}

.product-price {
    flex: 0 1 auto;
}

.navlink:hover {
    cursor: pointer;
}

.addproduct {
    display: none;
}

.formelements {
    width: 400px;
    margin: 20px auto;
}

.formelements > * {
    display: block;
    font-size: 15px;
    width: 100%;
    margin-top: 4px;
}


--

let products = [];

function showProducts() {
    $('.content').empty();
    for(let i=0; i<products.length; i++) {
        let product = `
            <div class="product" data-id=${products[i].id}>
            <div class="product-title">${products[i].title}</div>
            <div class="product-price">${products[i].price}</div>
            </div>    
        `;
        $('.content').append(product);
        if(!products[i].imageurl.startsWith('http')) {
            $('.product[data-id='+products[i].id+']').css('background', "url('images/"+products[i].imageurl+"') no-repeat center")
        }
        else {
            $('.product[data-id='+products[i].id+']').css('background', "url('"+products[i].imageurl+"') no-repeat center")
        }
    }
}

function loadProducts(q) {
    let url = q ? 'http://localhost:3000/products?q='+q : 'http://localhost:3000/products';

    $.ajax({
        url: url,
        method: 'GET',
        success: function(data) {
            products = data;            
            showProducts();
        },
        error: function(err) {
            console.log(err);
        }
    });
}

function addProduct() {
    
    let newProduct = {
        title: $('#title').val(),
        price: $('#price').val(),
        type: $('#type option:selected').val(),
        description: $('#description').val(),
        imageurl: $('#imageurl').val()        
    };

    $.ajax({
        url: 'http://localhost:3000/products',
        method: 'POST',
        data: JSON.stringify(newProduct),
        contentType: 'application/json; charset=utf-8',
        success: function(data) {
            products.push(data);
            showProducts();
            $('#navlink-startpage').trigger('click');
        },
        error: function(err) {
            console.log(err);
        }
    });    
}

$('document').ready(function() {

    console.log('document ready');
    $('#navlink-startpage').on('click', function(e) {
        $('.content').css('display', 'flex')
        $('.addproduct').hide();
    });

    $('#navlink-product').on('click', function(e) {
        $('.content').hide();
        $('.addproduct').show();
    });    

    $('#btn-addproduct').on('click', function(e) {
        addProduct();
    });   

    $('#btn-search').on('click', function() {
        let q = $('.searchbox').val();
        loadProducts(q);
    });

    loadProducts();
});


--

const express = require('express');
const fs = require('fs');
const bodyParser = require('body-parser');
const randomstring = require('randomstring');
const app = express();

if(!fs.existsSync(__dirname + '/products.json')) {
    fs.writeFileSync(__dirname + '/products.json', '[]', 'utf-8');
}

app.use(bodyParser.json());
app.use('/', express.static(__dirname + '/public'));

app.get('/', function(req, res) {
    return res.send({ productapi: '1.0' });
});

app.get('/products', function(req, res) {
    fs.readFile(__dirname + '/products.json', 'utf-8',
        function(err, data) {
            if(err) {
                return res.send({ error: err });
            }

            let products = JSON.parse(data);

            if(!req.query.q) {
                return res.send(products);
            }

            let q = req.query.q;
            let resultProducts = [];
            
            for(let i=0; i<products.length; i++) {                
                if(
                    (new String(products[i].title).toLocaleLowerCase().includes(q))
                    ||
                    (new String(products[i].description).toLocaleLowerCase().includes(q))
                ) {
                    resultProducts.push(products[i]);
                }
            }

            return res.send(resultProducts);
        }
    )
});

app.post('/products', function(req, res) {
    if(!req.body.type || !req.body.title || !req.body.description || !req.body.price || !req.body.imageurl) {
        return res.send({ error: 'type, title, description and price required' });
    }

    if(    req.body.type.toLowerCase() !== 'book'
        && req.body.type.toLowerCase() !== 'music'
        && req.body.type.toLowerCase() !== 'movie') {
            return res.send({ error: 'type is either book, music or movie' });
        }
    
    fs.readFile(__dirname + '/products.json', 'utf-8', 
    function(err, data) {
        if(err) return res.send({ error: err });

        let products = JSON.parse(data);
        let newProduct = {
            title: req.body.title,
            description: req.body.description,
            price: req.body.price,
            type: req.body.type,
            imageurl: req.body.imageurl,
            id: randomstring.generate(20)
        };

        products.push(newProduct);
        let productsJSON = JSON.stringify(products);
        fs.writeFile(__dirname + '/products.json', productsJSON,'utf-8',
            function(err) {
                if(err) return res.send({ error: err });

                return res.send( newProduct );
            });
    });

});

app.delete('/products/:id', function(req, res) {
    fs.readFile(__dirname + '/products.json', 'utf-8', 
        function(err, data) {
            if(err) return res.send({ error: err });

            let products = JSON.parse(data);
            let productFound = false;
            for(let i=0; i<products.length; i++) {
                if(products[i].id === req.params.id) {
                    products.splice(i, 1);
                    productFound = true;
                    break;
                }
            }

            if(!productFound) {
                return res.send({error: 'invalid id'});
            }

            let productsJSON = JSON.stringify(products);
            fs.writeFile(__dirname + '/products.json', productsJSON,'utf-8',
                function(err) {
                    if(err) return res.send({ error: err });
    
                    return res.send({ error: 0, deleted: req.params.id });
                });            
        });
});

app.listen( 3000 );


--

var mysql = require('mysql');

var con = mysql.createConnection({
	host: 'localhost',
	user: 'root',
	password: 'foobar',
	database: 'halloworld'
});

// read data 1
// con.query('select * from persons', 
//     function(err, rows) {
//     if(err)
//         throw err;

//     console.log( rows );
// });

// read data 2
// con.query('select * from persons where firstname = ?', 
//     [name], function(err, rows) {
//     if(err)
//         throw err;

//     console.log( rows );
// });

// update data 

// read data 2
// con.query('update persons set firstname = ? where firstname = ?', 
//     ['Hans', 'Manfred Junior'], function(err, rows) {
//     if(err)
//         throw err;

//     console.log( rows );
// });

// insert data 
// con.query('insert into persons (firstname, lastname, age) values (?,?,?)', 
//     ['Sabine', 'Wohlgefahrt', 35], function(err, rows) {
//     if(err)
//         throw err;

//     console.log( rows );
// });

// delete row
con.query('delete from persons where firstname = ?', 
    ['Sabine'], function(err, rows) {
    if(err)
        throw err;

    console.log( rows );
});

