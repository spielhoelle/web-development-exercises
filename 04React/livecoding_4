ES6 Refresher

-- index.html

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>ES6 Refresher</title>
</head>

<body>
  <h1>ES6 Refresher</h1>

  <script src="main.js"></script>
</body>

</html>

-- main.js

// CONST & LET
let name = 'John';
let test;

name = 'Jack';

const person = {
  name: 'John',
  age: 33
};

person.name = 'Jack';

const nums = [1, 2, 3, 4];
nums.push(5);

// ARROW FUNCTIONS

function sayHello() {
  console.log('Hello');
}

const sayHello = name => console.log(`Hello ${name}`);

const fruits = ['Apples', 'Oranges', 'Grapes'];

// FOREACH
fruits.forEach((fruit, index) => console.log(fruit));

// MAP
const singleFruit = fruits.map(fruit => fruit.slice(0, -1).toUpperCase());

// FILTER
const people = [
  { id: 1, name: 'Karen' },
  { id: 2, name: 'Bob' },
  { id: 3, name: 'Sharon' }
];

const people2 = people.filter(person => person.id !== 2);

// SPREAD

const arr = [1, 2, 3];
const arr2 = [...arr, 4];
const arr3 = [...arr.filter(num => num !== 2)];

const person1 = {
  name: 'Brad',
  age: 36
};

const person2 = {
  ...person1,
  email: 'brad@gmail.com'
};

// DESTRUCTURING

const profile = {
  name: 'John Doe',
  address: {
    street: '40 Main st',
    city: 'Boston'
  },
  hobbies: ['movies', 'music']
};

const { name, address, hobbies } = profile;
const { street, city } = profile.address;

// CLASSES
class Person {
  constructor(name, age) {
    this.name = name;
    this.age = age;
  }

  greet() {
    return `Hello, my name is ${this.name} and I am ${this.age}`;
  }
}

const person1 = new Person('John', 33);
const person2 = new Person('Sara', 28);

// SUBCLASSES;
class Customer extends Person {
  constructor(name, age, balance) {
    super(name, age);
    this.balance = balance;
  }

  info() {
    return `${this.name} owes $${this.balance}.00`;
  }
}

const customer1 = new Customer('Kevin', 32, 300);

// MODULES

// file 1 (file1.js)
export const name = 'Jeff';
export const nums = [1, 2, 3];
export default Person;

// // file 2 (file2.js)
import { name, nums } from './file1';
import Person from './file1';

--
-- components_1
--

-- components_1: App.js

import React, { Component } from 'react';
import './App.css';
import Fruit from './components/Fruit';

class App extends Component {

  state = {
    fruits: ['Apple', 'Mango', 'Banana', 'Lemon']
  }

  removeFruit = (fruit) => {
    const fruitIndex = this.state.fruits.findIndex((f) => {
      return fruit === f;
    });

    if(fruitIndex === -1) return;

    let fruits = [...this.state.fruits];
    fruits.splice(fruitIndex, 1);

    this.setState({
      fruits: fruits
    });
  }

  render() {
    return (
      <div className="App">
        <h1>Components 1</h1>
        {this.state.fruits.map((fruit) => {
          return <Fruit type={fruit} deleteClickHandler={this.removeFruit} />
        })}
      </div>
    );
  }
}

export default App;

-- components_1: components/Fruit.js

import React, { Component } from 'react'

export default class Fruit extends Component {
  
  state = {
      color: 'red'
  }

  // task
  changeColor = () => {
    let colors = ['red', 'blue', 'green', 'yellow', 'purple'];
    let newColor = Math.floor(Math.random() * colors.length);

    this.setState({
      color: colors[newColor]
    })
  }

  render() {
    return (
      <div>
        {this.props.type}, color = {this.state.color} 
        {/* task: create a button that randomly changes the color to either red, blue, green, yellow or purple */}
        {' '}<button onClick={this.changeColor}>Change Color</button>
        {' '}<button onClick={this.props.deleteClickHandler.bind(this, this.props.type)}>Delete Me</button>
      </div>
    )
  }
}

--
-- components_2
--

-- components_2: App.js

import React, { Component } from 'react';
import './App.css';
import Fruits from './components/Fruits';

class App extends Component {

  render() {
    return (
      <div className="App">
        <h1>Components 2</h1>
        <Fruits />
      </div>
    )
  }
}

export default App;

-- components_2: components/Fruits.js

import React, { Component } from 'react'
import Fruit from '../layout/Fruit';

export default class Fruits extends Component {
  
  state = {
    fruits: [
        {type: 'Apple', color: 'red'}, 
        {type: 'Mango', color: 'red'},
        {type: 'Banana', color: 'red'},
        {type: 'Lemon', color: 'red'}
    ],
    newFruitType: ''
  }
    
  removeFruit = (fruit) => {
    const fruitIndex = this.state.fruits.findIndex((f) => {
      return fruit === f.type;
    });

    if(fruitIndex === -1) return;

    let fruits = [...this.state.fruits];
    fruits.splice(fruitIndex, 1);

    this.setState({
      fruits: fruits
    });
  }  

  onChangeAddFruitType = (event) => {
    this.setState({
      newFruitType: event.target.value
    });
  }

  // task
  addFruit = (fruit) => {
    let colors = ['red', 'blue', 'green', 'yellow', 'purple'];
    let newColor = Math.floor(Math.random() * colors.length);
    let fruits = [...this.state.fruits];
    
    fruits.push({
        type: this.state.newFruitType,
        color: colors[newColor]
    });

    this.setState({
      fruits: fruits
    });    
  }

  render() {
    return (
      <div>
        <h2>Fruits component</h2>

        {/* task */}
        <input onChange={this.onChangeAddFruitType} type="text"/><button onClick={this.addFruit}>Add Fruit</button>

        {this.state.fruits.map( (fruit) => {
            return <Fruit type={fruit.type} color={fruit.color} deleteClickHandler={this.removeFruit} />
        })};
      </div>
    )
  }
}

-- components_2: layout/Fruit.js

import React from 'react'

const Fruit = (props) => {
  return (
    <div>
      {props.type}, color = {props.color} 
      {/* task: create a button that randomly changes the color to either red, blue, green, yellow or purple */}
      {/* {' '}<button onClick={this.props.changeColor}>Change Color</button> */}
      {' '}<button onClick={props.deleteClickHandler.bind(this, props.type)}>Delete Me</button>
    </div>      
  )
}

export default Fruit;
