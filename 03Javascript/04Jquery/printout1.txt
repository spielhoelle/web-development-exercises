--
-- BOILERPLATE
--

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>

    <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>
</html>

-- JS

$(document).ready( function() {
	console.log('Document is loaded.');
	
			
			
});

-- CSS


--
-- SELECTORS
-- 

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>
        <h1>Hi devugees!!!</h1>

        <h3>Google is now called Alphabet</h3>
        <p id="firstpara">
            Alphabet becomes the most powerful group of Internet/ IT-companies on the
            planet.
        </p>

        <h3>A new class of galaxy has been discovered, and it is almost all dark matter.
        </h3>

        <p class="para-class">
        According to one of the astronomers who found it, Dragonfly 44 is as big
        as the Milky Way, and its existence exposes how little scientists know about how galaxy formations works.
        </p>

        <br>

        <h3>
            Internet Companies
        </h3>

        <div>
            <ul id="companies">
                <li id="alphabet" name="theking">
                Alphabet                
                    <ul>   
                        <li class="flagship">
                            Google
                        </li>
                        <li>
                            Fiber
                        </li>
                        <li>
                            Calico
                        </li>
                    </ul>
                </li>
                <li id="amazon">
                Amazon
                    <ul class="flagship">
                        <li>
                            Amazon Shop
                        </li>
                    </ul>
                </li>
                <li class="company">Facebook</li>
                <li class="company">Zalando</li>
                <li>SoundCloud</li>
                <li class="ceo">Mark Zuckerberg</li>
                <li class="company">AirBnb</li>
            </ul>

        <br>

        <h3> Hogwarts professors and classes </h3>
        <table>
            <tr class="non-human">
                <td> Cuthbert Binns </td>
                <td> History of Magic </td>
            </tr>
            <tr>
                <td> Charity Burbage </td>
                <td> Muggle Studies </td>
            </tr>
            <tr class="non-human">
                <td> Firenze </td>
                <td> Divination </td>
            </tr>
            <tr class="non-human">
                <td> Rubeus Hagrid </td>
                <td> Care of Magical Creatures </td>
            </tr>
            <tr>
                <td> Aurora Sinistra </td>
                <td> Astronomy </td>
            </tr>
        </table>

        <br>

        <div class="indent great-grandfather">
            Great-grandfather
            <div class="indent grandfather">
                Grandfather
                <div class="indent father">
                    Father
                    <div class="indent son"> Son 1 </div>
                    <div class="indent son"> Son 2 </div>
                    <div class="indent son"> Son 3 </div>
                </div>
            </div>
        </div>

        <div class="indent great-grandmother">
            Great-grandmother
            <div class="indent grandmother">
                Grandmother
                <div class="indent mother">
                    Mother
                    <div class="indent daughter"> Daughter 1</div>
                    <div class="indent daughter"> Daughter 2</div>
                    <div class="indent daughter"> Daughter 3</div>
                </div>
            </div>
        </div>
        <div class="indent great-granduncle">Great-granduncle</div>
        <div class="indent great-grandaunt">Great-grandaunt</div>        

        <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>           
</html>

--

$(document).ready( function() {	
	console.log('Document is loaded.');
				
	$('h3').addClass('red-color');

	// task:
	//
	// elements with the id firstpara blue
	// and
	// elements with the class para-class green

	$('#firstpara').addClass('blue-color');
	// also works: $(firstpara).addClass('blue-color');
	$('.para-class').addClass('green-color');

	// tasks:
	// 	
	// 1. make all list items with the name "theking" red	

	// also works: $('[name=theking]').addClass('red-color');
	$('li[name=theking]').addClass('red-color');
	// 2. make all list items of class company and of class ceo underline
	$('.company,.ceo').addClass('underline');
	// 3. give all li items that are direct children of the element with id
	//    "companies" a border
	$('#companies > *').addClass('border');
	// 4. highlight all list items of class "company", if they have an index 
	//    greater than 0
	$('li.company:gt(0)').addClass('highlight');
	// 5. make all list items which are children of uls of class flagship 
	//    blue
	$('ul.flagship').addClass('blue-color');
	

	// https://github.com/foobaroo/devugees/
	// download jsadvanced_2.pdf
	
	// Tasks:
	// (1) Make all rows with an even index aliceblue
	$('tr:even').addClass('even-row');
	// (2) Make the rest yellow
	$('tr:odd').addClass('odd-row');
	// (3) Make the TDs inside the TRs with an even index aliceblue
	$('tr td:nth-child(even)').addClass('even-row');
	// (4) Make the TDs inside the TRs with an odd index yellow
	$('tr td:nth-child(odd)').addClass('odd-row');	
	// (5) Highlight all TDs that contain 'Hagrid' (highlight-2)
	$("td:contains('Hagrid')").addClass('highlight-2');
	// (6) Highlight all non-humans with index = 1
	$('.non-human:eq(1)').addClass('highlight-2');
	// (7) Highlight all non-humans with index > 1
	$('.non-human:gt(1)').addClass('highlight-2');	
	// (8) Highlight all non-humans with index < 1
	$('.non-human:lt(1)').addClass('highlight-2');

	// Tasks DOM-Traversal:
	//
	// (1) Make the parent of the father red.
	// (2) Make all parents of the son blue
	// (3) Make all parents of the son red, until the great-grandfather
	// (4) Make the closest div to the daughter green.
	// (5) Make the closest div to the mother green.
	// (6) Make all children of the father green.
	// (7) Make the next sibling of the great-grandfather red.
	// (8) Make the great-grandfather blue, from the perspective of
	//     the great-grandmother
	// (9) Make all the siblings next to the great-grandfather red
	// (10) Make the first sibling next to the great-grandfather red
	// (11) Make the last sibling next to the great-grandfather blue 
	// (12) Make all siblings left of the great-grandaunt blue
	// (13) Make the first sibling left of the great-grandaunt blue
	// (14) Make the last sibling left of the great-grandaunt red
	// (15) Make all daughters green

});

-- CSS

table, th, td {
    border: 1px solid grey;
    border-collapse: collapse;
    padding: 5px;
}

.indent {
    padding: 2px 8px;
    margin: 2px 8px;
}

.even-row {
    background-color: blue;    
}

.odd-row {
    background-color: yellow;
}

.highlight-2 {
    font-weight: bold;
    color: #de1515;
}

.red-color {
    color: #de1515;
}
.blue-color {
    color: cornflowerblue;
}
.green-color {
    color: seagreen;
}
.underline {
    text-decoration: underline;
}
.border {
    padding: 10px;
    border: solid 1px seagreen;
}
.highlight {
    background-color: darkkhaki;
}


--
-- CHAINING
--


<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>

    <div id="a-level0">
        <div id="a-level1">
            <ul id="a-level2">
                <li id="chaos">Chaos</li>
                <li>Computer</li>
                <li>Club</li>
            </ul>
        </div>
    </div>

    <div id="b-level0">
        <p id="p1"></p>
        <p id="p2"></p>
        <p id="p3"></p>
    </div>

    <div id="c-level0">
        <div id="c-level1">
            <p>Hallo What?</p>
        </div>
    </div>


    <h3>
        Hogwarts professors and classes
    </h3>
    <div>

        <table>
            <tr>
                <td> Cuthbert Binns </td>
                <td> History Of Magic </td>
            </tr>
            <tr>
                <td> Gilderoy Lockhart </td>
                <td> Defense Against The Dark Arts </td>
            </tr>
            <tr>
                <td> Charity Burbage </td>
                <td> Muggle Studies </td>
            </tr>
            <tr>
                <td> Alastor Moody </td>
                <td> Defense Against The Dark Arts </td>
            </tr>
            <tr>
                <td> Firenze </td>
                <td> Divination </td>
            </tr>
            <tr>
                <td> Quirinus Quirrell </td>
                <td> Defense Against The Dark Arts </td>
            </tr>
            <tr>
                <td> Rubeus Hagrid </td>
                <td> Care Of Magical Creatures </td>
            </tr>
            <tr>
                <td> Horace Slughorn </td>
                <td> Potions </td>
            </tr>
            <tr>
                <td> Aurora Sinistra </td>
                <td> Astronomy </td>
            </tr>
            <tr>
                <td> Remus Lupin </td>
                <td> Defense Against The Dark Arts </td>
            </tr>
            <tr>
                <td> Severus Snape </td>
                <td> Defense Against The Dark Arts </td>
            </tr>
        </table>
    </div>


    <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>
</html>

-- JS


var x, y;

$(document).ready( function() {
	console.log('Document is loaded.');

	x = $('li#chaos').parent()
				 .closest('div')
				 .parent()
				 .attr('id');

	// x = a-level0
	console.log('x = ' + x);

	y = $('li#chaos').parent()
				 .closest('div')
				 .parent()
				 .next()
				 .find('p#p1')
				 .html('Hallo World1')
				 .end()
				 .find('p#p2')
				 .html('Hallo World2')
				 .end()
				 .find('p#p3')
				 .html('Hallo World3');

	// please perform in one chain:
	//
	// - find the TD that contains the string 'Dark Arts'
	// - go its parent
	// - find the td with index = 0 and add the class 
	//   highlight-name
	// - go back to the point of your last find()
	// - find the td with index = 1 and add the class
	//   'highlight-subject'

	$('td:contains("Dark Arts")')
		.parent()
		.find('td:eq(0)')
		.addClass('highlight-name')
		.end()
		.find('td:eq(1)')
		.addClass('highlight-subject');

});


-- CSS

table, th , td {
    border: 1px solid grey;
    border-collapse: collapse;
    padding: 5px;
}
.red-color {
    background-color: #de1515;
}
.highlight-name {
    background-color: aliceblue;
}
.highlight-subject {
    background-color: bisque;
}


--
-- EVENTS
--

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>


    <button id="clickButton">uses click</button>

    <button id="bindButton">uses bind</button>

    <button id="onButton">uses on</button>

    <div>
        <ul>
            <li id="user-1">User 1</li>
            <li id="user-2">User 2</li>
            <li id="user-3">User 3</li>
            <li id="user-4">User 4</li>
        </ul>
    </div>

        <table>
            <tr>
                <td> Cuthbert Binns </td>
                <td> History Of Magic </td>
            </tr>
            <tr>
                <td> Charity Burbage </td>
                <td>
                    <a href="https://evil.com" target="_blank">
                        Muggle Studies
                    </a>
                </td>
            </tr>
            <tr>
                <td> Firenze </td>
                <td>
                    <a href="https://en.wikipedia.org/wiki/Magic_in_Harry_Potter#Divination"
                       target="_blank">
                        Divination
                    </a>
                </td>
            </tr>
            <tr>
                <td> Pomona Sprout </td>
                <td> Herbology </td>
            </tr>
            <tr>
                <td> Rubeus Hagrid </td>
                <td>
                    <a href="https://en.wikipedia.org/wiki/Magic_in_Harry_Potter#Care_of_Magical_Creatures"
                       target="_blank">
                        Care Of Magical Creatures
                    </a>
                </td>
            </tr>
            <tr>
                <td> Aurora Sinistra </td>
                <td> Astronomy </td>
            </tr>
        </table>

        <button id="clickMe">click me</button>

        <button id="removeClickMe">remove the eventhandler from clickme</button>

        <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>
</html>

-- JS

$(document).ready( function() {
	console.log('Document is loaded.');

	$('#clickButton').click( function(e) {
		alert('This is a click handler');
	});

	// 2nd event for #clickButton
	$('#clickButton').click( function(e) {
		alert('This is the second click handler');
	});

	$('#bindButton').bind('click', function(e) {
		alert('This is a bind handler');
	});

	$('#onButton').on('click', function(e) {
		alert('This is an on handler');
	});

	// task:
	//
	// create a click event for all li-items
	// that alerts the html inside of the 
	// li.
	// please make use of the "this" - keyword 

	$('li').click( function() {
	    
		// retrieve native DOM object
	    alert( $(this).get(0).innerHTML + ' = ' + this.innerHTML);
	});

	// task:
	//
	// make it possible that the user can only
	// open links that do not contain the string
	// "evil" in the URL

	/*
	$('a[href*="evil"]').click( function(e) {
		e.preventDefault();
	});
	*/

	$('a').click( function(e) {

		var link = $(this);
		console.log( link.attr('href') );

		// 1st way: 

		if( link.attr('href').indexOf('evil') != -1 )
			e.preventDefault();
		// 2nd way:
		//if( this.hostname.indexOf('evil') != -1) {
		//	e.preventDefault();
		//}
	});

	$('a').on('contextmenu', function(e) {
		e.preventDefault();
	});

	$('button#clickMe').on('click', function() {
		alert('I soon will be removed');
	});	

	$('button#removeClickMe').on('click', function() {
		$('button#clickMe').off('click');
	});



});

-- CSS

table, th , td {
    border: 1px solid grey;
    border-collapse: collapse;
    padding: 5px;
}


--
-- EVENTDELEGATION
--

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>

    <div>
        <button class="btns">Button 1</button><br>
        <button class="btns">Button 2</button><br>
        <button class="btns">Button 3</button><br>
    </div>

    <button id="addButton">Add Button</button>

    <table id="users" style="border: 1px solid;">
        <tr id="usr-1">
            <td>1</td>
            <td>User 1</td>
            <td><button class="removeButton">remove me</button></td>
        </tr>
    </table>


    <button id="addUserButton">New User</button>

    <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>
</html>

-- JS

$(document).ready( function() {
	console.log('Document is loaded.');

	/*
	$('button.btns').on('click', function(e) {
		alert('Hallo from button ' 
			+ $(this).text());
	});
	*/

	$('div').on('click', 'button.btns', function(e) {

		alert('Hallo from button ' + $(this).text());
	});
	

	var index = 4;
	$('#addButton').on('click', function(e) {	
		var buttonText = 'Button ' + index;
		index++;

		$('div').append('<button class="btns">'
			+ buttonText + '</button><br>');

		console.log('Added button' + buttonText );

	});

	function addUser(id) {
		$('table#users').append(
			 '<tr id="usr-'+id+'">'
			+'<td>' + id + '</td>'
			+'<td>User ' + id + '</td>'
			+'<td><button class="removeButton">remove me</button></td>'
			+'</tr>');
	}

	var userIndex = 1;
	$('button#addUserButton').on('click',
		function(e) {
			userIndex++;
			addUser(userIndex);
		});

	// task: 
	//
	// when the user clicks "remove me",
	// the row in which button is clicked
	// will be removed.
	//
	// 

	$('table#users').on('click', 'button.removeButton', function(e) {

		$(this).parent().parent().remove();
		/*var userId = $(this).parent().prev().prev().html();
		alert('user id = ' + userId);
		$('tr#usr-' + userId).remove();
		*/
	});

});

-- CSS

table, th , td {
    border: 1px solid grey;
    border-collapse: collapse;
    padding: 5px;
}

-- CUSTOMEVENTS


<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>

    <div id="hallo">
        <button id="halloButton">Click Me</button>
    </div>    

    <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>
</html>


-- JS


$(document).ready( function() {
	console.log('Document is loaded.');

	$('div').on('halloworld', function() {
		alert('whats up?');
	});

	$('button#halloButton').on('click', function() {
		alert('i am clicked');
		$('div').trigger('whatsup');
	});

});

-- CSS

.box {
    height: 100px;
    width: 250px;
    vertical-align: middle;
    border: solid 1px grey;
    margin: 2px 0px;
}

--
-- KEYEVENTS
--


<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>

    <div>
        
    </div>

    <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>
</html>

-- JS

$(document).ready( function() {
	console.log('Document is loaded.');

	var uppercase = false;

	$(document).keyup( function(event) {
		var ch = String.fromCharCode( event.which );

		// console.log('key: ' + ch + ', keyCode: ' + event.keyCode);

		/* task:
		 1. if the key is a letter or a digit,  then append it to the div
		 2. test event.keyCode and find out about the proper codes for return, left shift key and the delete key.
		 3. if the user presses return, he will continue writing on a new line
		 4. if the user presses the left shift key, he will switch to the uppercase mode. so all letters he will type from now on will be in uppercase. if he preses the left shift key again, the mode switches to lowercase.
		 5. if he presses delete, all text will disappear and the div will be emptied.
		*/

		//$('div').append( ch );

		if( event.keyCode < 49 || event.keyCode > 90 )
			return;

		if(event.keyCode === 13) { // return
			$('div').append('<br>');
		}
		else if(event.keyCode === 46 ) { // delete
			$('div').empty();
		}
		else if(event.keyCode === 16) { // left shift
			if( uppercase === true ) 
				uppercase = false;
			else
				uppercase = true;
		}
		else {
			if( uppercase === true ) {
				$('div').append( ch.toUpperCase() );
			}
			else {
				$('div').append( ch.toLowerCase() );
			}
		}
	});
});

--
-- DOMMANIPULATION
--


<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>

    <h2>1. html() and text()</h2>

    <input id="htmlmarkup"><br>
    
    <div class="updatehtml link">
        Update HTML
    </div>
    <div class="updatetext link">
        Update text
    </div>
    <div class="text" id="text-1">
        Update me
    </div>

    <h2>2. attr() and removeAttr()</h2>

    <div class="add link">
        Add
    </div>
    <div class="remove link">
        Remove
    </div>
    <div class="text" id="text-2" style="color:green; font-size:22px">
        Hallo World
    </div>
    <br>

    <h2>3. Adding Dom Elements with before(), after() and append()</h2>

    <input id="userinput" placeholder="Enter a fruit ...">
    <br>
    <div class="after link">
        Insert at end
    </div>
    <br>
    <div class="before link">
        Insert at start
    </div>
    <br>
    <div class="append link">
        First becomes last
    </div>
    <br>
    <ul id="fruit-list">
        <li>
            Apple
        </li>
        <li>
            Orange
        </li>
    </ul>
    <br>

    <h2>4. Removing, detaching and emptying DOM elements.</h2>

    <div class="remove link">
        Remove
    </div>
    <div class="detach link">
        Detach
    </div>
    <div class="empty link">
        Empty
    </div>
    <br>
    <div class="link add">
        Add back
    </div>
    <br>
    <br>
    <div id="container">
        <div class="box">
            <i>Hallo World</i>
        </div>
    </div>
    <br>

    <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>
</html>

-- JS
$(document).ready(function() {
	console.log('Document is loaded.');

    // html() and text()
	// task: when the user clicks on Update HTML,
	//       the div with the class "text" will be
	//       updated with the html() function
	//
	//       when the user clicks on Update Text,
	//       it will be updated with text() function
	//
	//       What is a good way to test your code?

	$('.updatehtml').click(function() {
		var htmlMarkup = $('#htmlmarkup').val();
		$('#text-1').html(htmlMarkup);
	});

	$('.updatetext').click(function() {
		var htmlMarkup = $('#htmlmarkup').val();
		$('#text-1').text(htmlMarkup);
	});

    // attr() and removeAttr()
    //
	// task: a) when the user clicks on the Add-button,
	// 	     the id of the textbox "text-2" will be
	//       changed to "text-2b".
	//
	//       b) when the user clicks on remove, the
	//          style of "text-2b" will be removed entirely

	$('.add').click( function() {
		$('#text-2').attr('id', 'text-2b');
	});

	$('.remove').click( function() {
		$('#text-2b').removeAttr('style');
	});

	// Adding DOM-Elements
	//
	// task: a) when the user clicks on "Insert at end",
	//          a new fruit is added at the end of the
	//			list
	//       b) when the user clicks on "Insert at start",
	//			a new fruit is added at the beginning of the list
	//       c) when the user clicks on "first becomes last" 
	//          the first element will be added to the end of the list

	$('.after').click( function() {
		var value = $('#userinput').val();
		$('#fruit-list > li').last().after('<li>' + value + '</li>');
	});

	$('.before').click( function() {
		var value = $('#userinput').val();
		$('#fruit-list > li').first().before('<li>' + value + '</li>');		
	});

	$('.append').click( function() {
		var value = $('#userinput').val();
		$('#fruit-list').append($('#fruit-list > li').first());
	});

	// Removing and Detaching Elements
	//
	// task: a) when the user clicks on the button remove,
	//		    the div with class box will be removed
	//       b) when the user clicks on the button detach,
	//			the div with class box will be detached
    //       c) when the user clicks on the button empty,
    //			the div with class box will be emptied
    //       d) when the user clicks on the button add back,
    //			the div with class box will be reattached

    var el = $('div.box');

	$('.remove').click( function() {
		el.remove();
	});  

	$('.detach').click( function() {
		el.detach();
	});

	$('.empty').click( function() {
		el.empty();
	});

	$('div.add').click( function() {
		$('#container').append(el);
	});

});

-- CSS

.link {
    display: inline-block;
    height: 34px;
    width: 150px;
    vertical-align: middle;
    text-align: center;
    border: solid 1px lightgreen;
    color: green;
    cursor: pointer;
    margin: 2px 0px;
    line-height: 34px;
}

.link:hover {
    border: solid 1px darkgreen;
    color: darkolivegreen;
}

input {
    display: inline-block;
    height: 28px;
    width: 304px;
    border: solid 1px grey;
    color: darkslategrey;
    margin: 2px 0px;
    line-height: 28px;
}

.text {
    font-family: sans-serif;
    font-size: 32px;
    color: #de1515;
    opacity: 1.0;
    margin-top: 18px;
    border: solid 1px #de1515;
    width: 306px;
    height: 200px;
}

.box {
    width: 462px;
    height: 200px;
    border: solid 1px grey;
    display: inline-block;
    font-size: 44px;
    text-align: center;
    vertical-align: middle;
    line-height: 180px;
    color: red;
    cursor: pointer;
}

--
-- AJAX
--

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Devugees: Introduction to JQuery</title>
        <script type="text/javascript">
            document.write('<link rel="stylesheet" type="text/css" href="style.css?'+Math.random()+'" />');
        </script>        
    </head>
    <body>

    <body>
    <div class="getdatasuccess link">
        Get data - success
    </div>
    <div class="getdatafail link">
        Get data - fail
    </div>
    <br>
    <br>

    <table id="tbl1">
        <tr>
            <th>Name</th>
            <th>Class</th>
        </tr>
        <tr class="row">
            <td class="name"></td>
            <td class="subject"></td>
        </tr>
        <tr class="row">
            <td class="name"></td>
            <td class="subject"></td>
        </tr>
        <tr class="row">
            <td class="name"></td>
            <td class="subject"></td>
        </tr>
        <tr class="row">
            <td class="name"></td>
            <td class="subject"></td>
        </tr>
        <tr class="row">
            <td class="name"></td>
            <td class="subject"></td>
        </tr>
        <tr class="row">
            <td class="name"></td>
            <td class="subject"></td>
        </tr>
    </table>

    <h2>$.get, $.load and $.getScript</h2>

    <div class="getdata link">
        Get
    </div>
    <div class="getscript link">
        Get Script
    </div>
    <div class="getjson link">
        Get Json
    </div>
    <br>
    <br>
    <div id="htmldata">
    </div>
    <div id="scriptdata">
    </div>
    <br>
    <div id="jsondata">
        <table id="tbl2">
            <tr>
                <th>Name</th>
                <th>Class</th>
            </tr>
            <tr class="row">
                <td class="name"></td>
                <td class="subject"></td>
            </tr>
            <tr class="row">
                <td class="name"></td>
                <td class="subject"></td>
            </tr>
            <tr class="row">
                <td class="name"></td>
                <td class="subject"></td>
            </tr>
            <tr class="row">
                <td class="name"></td>
                <td class="subject"></td>
            </tr>
            <tr class="row">
                <td class="name"></td>
                <td class="subject"></td>
            </tr>
            <tr class="row">
                <td class="name"></td>
                <td class="subject"></td>
            </tr>
        </table>
    </div>
    <br>


    <script src="jquery-3.2.1.min.js"></script>
		<script type="text/javascript">
		document.write('<scr'+'ipt src="main.js?'+Math.random()+'" type="text/javascript"></scr'+'ipt>');
		</script>
    </body>
</html>

-- JSON

[
  {
    "name" : "Bathsheba Babbling",
    "subject" : "Ancient Runes"
  },
  {
    "name" : "Cuthbert Binns",
    "subject" : "History Of Magic"
  },
  {
    "name" : "Charity Babbage",
    "subject" : "Muggle Studies"
  },
  {
    "name" : "Filius Flitwick",
    "subject" : "Charms"
  },
  {
    "name" : "Firenze",
    "subject" : "Divination"
  },
  {
    "name" : "Aurora Sinistra",
    "subject" : "Astronomy"
  }
]

-- data.html

<div style="font-size: 33px"><b>I am HTML!</b></div>

-- data.js

document.getElementById('scriptdata').innerHTML = 'I am a script!';

-- main.js

$(document).ready( function() {
    console.log('Document is loaded.');


    // 1. use the $.ajax method, to load 
    //    the data.json and load its contents
    //    into the table #tbl1 (not the getJSON here)

    $('.getdatasuccess').click(function() {
        $.ajax({
            url: 'data.json',
            type: 'GET',
            dataType: 'json',
            success: function(response) { 
                var rows = $('#tbl1 tr.row');
                for(var i=0; i<rows.length; i++) {
                    $(rows[i]).children().eq(0).html( response[i].name );
                    $(rows[i]).children().eq(1).html( response[i].subject );    
                }
            },
            complete: function(xhr, status) {

            },
            error: function(xhr, status) {

            }
        });   
    });

    // 2. create an ajax requests that 
    //    loads a file that DOES NOT exist
    //    and print out the status code in the "error" function
    //    of the ajax object.

    $('.getdatafail').click(function() {
        $.ajax({
            url: 'error.json',
            type: 'GET',
            dataType: 'json',
            success: function(response) { 
                console.log('This will not be called.');
            },
            complete: function(xhr, status) {
                console.log('This will always be called');
            },
            error: function(xhr, status, error) {
                console.log('error: ' + error);
                console.log('status: ' + status);
                console.log('xhr: ' + xhr);
            }
        });   
    });

    // 3. create an $.get request that loads
    //    the "data.html" file into the #htmldata
    //    div

    $('.getdata').click(function() {
        // also works: $('#htmldata').load('data.html');
        $.get('data.html', function(response) {
            $('#htmldata').append(response);
        });
    });

    // 4. load the script "data.js" using the
    //    $.getScript function

    $('.getscript').click(function() {
        // $.getScript('data.js', function(){ $('#htmldata').append(); });
        $.getScript('data.js', function( response ) {
            console.log(response);
        });
    });

    // Same as in 1., load the data.txt again using the $.getJSON function 
    // and load the contents into the table #tbl2

    $('.getjson').click(function() {
        $.getJSON('data.txt', function(response) {
            var rows = $('#tbl2 tr.row');
            for(var i=0; i<rows.length; i++) {
                $(rows[i]).children().eq(0).html( response[i].name );
                $(rows[i]).children().eq(1).html( response[i].subject );    
            }            
        });
    });


});

-- css

.link {
    display: inline-block;
    height: 34px;
    width: 150px;
    vertical-align: middle;
    text-align: center;
    border: solid 1px deeppink;
    color: hotpink;
    cursor: pointer;
    margin: 2px 0px;
    line-height: 34px;
}

.link:hover {
    border: solid 1px purple;
    color: mediumpurple;
}

table, th , td {
    border: 1px solid grey;
    border-collapse: collapse;
    padding: 5px;
}

.name {
    height: 24px;
    width: 150px;
}

.subject {
    height: 24px;
    width: 150px;
}


